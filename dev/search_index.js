var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = LocalSearchSolvers","category":"page"},{"location":"#LocalSearchSolvers","page":"Home","title":"LocalSearchSolvers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [LocalSearchSolvers]","category":"page"},{"location":"#LocalSearchSolvers.domain-Union{Tuple{Array{T,1}}, Tuple{T}} where T<:Number","page":"Home","title":"LocalSearchSolvers.domain","text":"domain(values::Vector; domain = :set)\n\nDiscrete domain constructor. The type keyword can be set to :set (default) or :indices.\n\n\n\n\n\n","category":"method"},{"location":"#LocalSearchSolvers.variable-Union{Tuple{D}, Tuple{D,String}} where D<:LocalSearchSolvers.AbstractDomain","page":"Home","title":"LocalSearchSolvers.variable","text":"variable(values::Vector{T}, name::String; domain = :set) where T <: Number\nvariable(domain::D, name::String) where D <: AbstractDomain\n\nConstruct a variable with discrete domain. See the domain method.\n\n\n\n\n\n","category":"method"}]
}
